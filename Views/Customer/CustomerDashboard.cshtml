



@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@model List<EventEatsQuotify.Models.ApplicationUser>

@{
    ViewData["Title"] = "Customer Dashboard";
}

<head>
    <style>
        <style >
        body {
            font-family: Arial, sans-serif;
        }
        marquee{
            display: none;
        }

        .custom-card {
            background-color:black;
            border: none;
            border-radius: 5px;
            overflow: hidden;
            transition: transform 0.3s ease-in-out;
margin:10px 0px;
        }

            .custom-card:hover {
                transform: scale(1.02);
            }

        .custom-card-img-top {
            width: 50%;
            
            
            object-fit: cover;
        }

        .custom-card-body {
            padding: 1rem;
        }

        .custom-card-title {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }

        .custom-card-text {
            font-size: 0.9rem;
            margin-bottom: 1rem;
        }

        .custom-btn {
            font-size: 0.7rem;

            padding: 0.5rem 1rem;
            border: none;
            
            border-radius: 2rem;
            transition: background-color 0.3s ease-in-out;
        }

        .custom-btn-primary {
            background-color: #007bff; /* Blue color */
            color: #fff;
        }

            .custom-btn-primary:hover {
                background-color: #0056b3; /* Darker blue on hover */
            }

        .custom-btn-secondary {
            background-color: #007bff; /* Blue color */
            color: #fff;
            margin-top: 25px;
        }

            .custom-btn-secondary:hover {
                background-color: #0056b3; /* Darker blue on hover */
            }

        .custom-modal {
            background-color: rgba(0, 0, 0, 0.3);
        }

        .custom-modal-content {
            border-radius: 5px;
        }

        .custom-modal-header {
            border-bottom: none;
        }

        .custom-modal-title {
            font-size: 1.2rem;
            font-weight: bold;
        }

        .custom-modal-footer {
            border-top: none;
        }

            .custom-modal-footer .custom-btn {
                margin-right: 0.5rem;
            }

        .custom-select {
            position: relative;
            display: inline-block;
            width: 100%;
        }

            .custom-select select {
                width: 100%;
                padding: 10px 40px 10px 15px;
                appearance: none;
                -webkit-appearance: none;
                -moz-appearance: none;
                background-color: #fff;
                border: 1px solid #ced4da;
                border-radius: .25rem;
            }

            .custom-select::after {
                content: '\25BC'; /* Unicode character for the dropdown arrow */
                position: absolute;
                top: 50%;
                right: 15px;
                transform: translateY(-50%);
                pointer-events: none;
                color: #555;
            }

        .food-item-image-container {
            width: 100%;
            height: 200px; /* Adjust height as needed */
            overflow: hidden;
        }

        .food-item-image {
            width: 100%;
            height: 100%;
            object-fit: cover; /* Maintain aspect ratio */
        }

        .modal-body {
            max-height: 70vh; /* Adjust max height of modal body */
            overflow-y: auto; /* Enable vertical scroll if content exceeds max height */
        }

        .comparison-container {
            margin-top: 30px;
        }

        .comparison-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

            .comparison-table th, .comparison-table td {
                border: 1px solid #ddd;
                padding: 8px;
                text-align: center;
            }

            .comparison-table th {
                background-color: #f2f2f2;
                font-weight: bold;
            }

        .comparison-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .comparison-header .custom-btn {
                margin-right: 10px;
            }
 

    </style>
</head>

<div class="dashboard py-2 ">
    <div class="row">
        <div class="col-md-12">


<div class="main-section p-5 d-flex cdb">
    <div class="row mt-3 mb-5 w-80">
                <h3 class="fw-bold text-light mb-4">Welcome to the <span class="text-pink-menu">Customer Dashboard</span> </h3>
        <div class="col">
                        <h5 class="text-light">Search Vendor</h5>
            <div class="d-flex flex-column w-100">
                <input type="text" id="searchInput" class="form-control mb-3" placeholder="Search vendors"">
                <select id="searchType" class="form-select mb-3" >
                    <option value="vendor" selected>By Vendor</option>
                    <option value="fooditem">By Food Item</option>
                </select>
             
            </div>
        </div>
    </div>
    <!-- Vendor Comparison Section -->
    <div class="comparison-header ">
        <div class="d-flex flex-column">
            <h5 class="text-light">Filters</h5>
            <div class="mb-3">
            <input type="checkbox" id="selectAllCheckbox"> <span class="text-light "> Select All </span>
            </div>
            <button class="custom-btn btn-secondary custom-btn-black" id="compareVendorsButton">Compare Selected Vendors</button>
            <hr class="bg-danger">
                        <h5 class="text-light mb-3">Features</h5>

                        <button class="custom-btn btn btn-secondary custom-btn-black" id="viewQuotationsButton">View Quotations</button>
        </div>
    </div>
              

</div>

<div class="">
      <div id="vendorContainer">
        @Html.Partial("_VendorList", Model)
    </div>

    

    <!-- Modal to Display Comparison -->
    <div class="modal fade" id="vendorComparisonModal" tabindex="-1" role="dialog" aria-labelledby="vendorComparisonModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content custom-modal-content">
                            <div class="modal-header   bg-dark text-light">
                                <h5 class="modal-title " id="quotationHistoryModalLabel">Vendor Comparison</h5>
                     <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>

                </div>
                <div class="modal-body" id="vendorComparisonContainer">
                    <!-- Content will be loaded here dynamically -->
                </div>
           @*      <div class="modal-footer custom-modal-footer">
                    <button type="button" class="btn btn-secondary custom-btn" data-dismiss="modal">Close</button>
                </div> *@
            </div>
        </div>
    </div>
    <!-- Modal to Display Quoatation History -->
    <div class="modal fade" id="quotationHistoryModal" tabindex="-1" role="dialog" aria-labelledby="quotationHistoryModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content custom-modal-content">
                <div class="modal-header bg-dark text-light">
                    <h5 class="modal-title " id="quotationHistoryModalLabel">Quotation History</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>

                </div>
                <div class="modal-body p-3" id="quotationHistoryContainer">
                    <!-- Content will be loaded here dynamically -->
                </div>
                @*      <div class="modal-footer custom-modal-footer">
                <button type="button" class="btn btn-secondary custom-btn" data-dismiss="modal">Close</button>
                </div> *@
            </div>
        </div>
    </div>
        </div>
        </div>
    </div>


</div>

@section Scripts {
 <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://kit.fontawesome.com/c58416c086.js" crossorigin="anonymous"></script>
    <script src="~/js/common.js" asp-append-version="true"></script>

    <script src="~/js/site.js" asp-append-version="true"></script> 


    <script>

        $(document).ready(function () {
            // Select All functionality
            $('#selectAllCheckbox').change(function () {
                $('.vendor-checkbox').prop('checked', this.checked);
            });

            // Compare Selected Vendors button click event
            $('#compareVendorsButton').click(function () {
                var selectedVendors = [];
                $('.vendor-checkbox:checked').each(function () {
                    var vendorId = $(this).data('vendor-id');
                    selectedVendors.push(vendorId);
                });

                if (selectedVendors.length < 2) {
                    alert('Please select at least two vendors to compare.');
                    return;
                }

                // Send selected vendor IDs to the server for comparison
                $.ajax({
                    url: '@Url.Action("CompareVendors", "Customer")',
                    method: 'POST',
                    data: { vendorIds: selectedVendors },
                    success: function (response) {
                        // Display comparison results in modal
                        $('#vendorComparisonContainer').html(response);
                        $('#vendorComparisonModal').modal('show');
                        rebindComparisonTableFilters(); // Rebind filters after loading content
                    },
                    error: function (error) {
                        console.error(error);
                    }
                });
            });

            // View Quotations button click event
            $('#viewQuotationsButton').click(function () {
                $.ajax({
                    url: '@Url.Action("ViewQuotations", "Customer")',
                    method: 'GET',
                    success: function (response) {
                        debugger
                        // Display the quotations in a modal or on a new page
                        $('#quotationHistoryContainer').html(response);
                        $('#quotationHistoryModal').modal('show');
                    },
                    error: function (error) {
                        console.error(error);
                    }
                });
            });
        });



        var searchType = $("#searchType").val();

        // Debounce function to limit the rate at which a function can fire.
        function debounce(func, wait) {
            let timeout;
            return function (...args) {
                const context = this;
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(context, args), wait);
            };
        }

        // Function to perform the AJAX search request
        function performSearch(searchQuery) {
            console.log("from performSearch",searchType);
            $.ajax({
                url: '@Url.Action("CustomerDashboard", "Customer")',
                method: 'GET',
                data: { searchQuery: searchQuery, searchType: searchType },
                success: function (response) {
                    $('#vendorContainer').html(response);
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        // Debounced version of the performSearch function
        const debouncedSearch = debounce(function () {
            const searchQuery = $('#searchInput').val();
            performSearch(searchQuery);
        }, 300); // Adjust the delay as needed

        $(document).ready(function () {
            $('#searchInput').on('input', function () {
                debouncedSearch();
            });

            $('#searchType').on('change', function () {
                searchType = $(this).val();
                console.log(searchType);
                if (searchType === 'vendor') {
                    $('#searchInput').attr('placeholder', 'Search vendors');
                } else {
                    $('#searchInput').attr('placeholder', 'Search food items');
                }
            });
        });

        function loadMenuItems(vendorId) {
            $('#loader').removeClass('d-none');
            $.ajax({
                url: '/Customer/GetMenuItems',
                method: 'GET',
                data: { vendorId: vendorId },
                dataType: 'json',
                success: function (response) {
                    $('#loader').addClass('d-none');
                    if (response.success) {
                        var htmlContent = '';
                        $.each(response.data, function (index, item) {
                            htmlContent += '<div class="col-md-6">';
                            htmlContent += '<div class="mb-3 card  mx-1 d-flex flex-column justify-content-center align-items-center p-3">';
                            htmlContent += '<img src="' + (item.foodPicturePath || '~/images/defaultimages/placeholder.png') + '" alt="' + (item.name || "Item") + '" class="img-fluid rounded w-50">';
                            htmlContent += '<h1>' + (item.name || "") + '</h1>';
                            htmlContent += '<p class="text-center"><strong>Description:</strong> <br> ' + (item.description || "") + '</p>';
                            htmlContent += '<p  class="text-center fw-bold fs-4"><strong class="fs-6">Price:</strong> <br> ' + (item.price || "") + '/=</p>';
                            htmlContent += '</div>';
                            htmlContent += '</div>';
                        });
                        $('#vendorMenuModalContent-' + vendorId).html(htmlContent);
                        $('#vendorMenuModal-' + vendorId).modal('show');
                    } else {
                        console.error(response.message);
                    }
                },
                error: function (error) {
                    $('#loader').addClass('d-none');
                    console.error(error);
                }
            });
        }

        function loadVendorProfile(vendorId) {
            $('#loader').removeClass('d-none');
            $.ajax({
                url: '/Customer/GetVendorProfile',
                method: 'GET',
                data: { vendorId: vendorId },
                dataType: 'json',
                success: function (response) {
                    $('#loader').addClass('d-none');
                    if (response.success) {
                        var vendor = response.data;
                        var profileImageSrc = vendor && vendor.profilePicture ? 'data:image/png;base64,' + vendor.profilePicture : '/images/defaultimages/user.png';
                        var htmlContent = `
                                     <div class="d-flex feedback justify-content-evenly">
                                    <img src="${profileImageSrc}" class="img-fluid rounded mb-3" style="width: 150px; height: 150px;">
                                   <div class="d-flex ">
                                            <div class="px-3">
                                                      <h5 class='text-pink-menu'>Customer Info:</h5>
                                                       <p><strong>Name:</strong> ${vendor.name || ""}</p>
                                                    <p><strong>Description:</strong> ${vendor.description || ""}</p>
                                                    <p><strong>Address:</strong> ${vendor.shopAddress || ""}</p>
                                                    <p><strong>Website:</strong> <a href="${vendor.website || "#"}" target="_blank">${vendor.website || ""}</a></p>
                                                    <p><strong>Specialties:</strong> ${vendor.specialties || ""}</p>
                                                    <p><strong>Menu Highlights:</strong> ${vendor.menuHighlights || ""}</p>
                                            </div>
                                            <div class="d-flex flex-column mx-3" id="reviews-${vendor.id}">
                                                        <h5 class='text-pink-menu'>Customer Reviews:</h5>
                                                <div id="reviewList-${vendor.id}"></div>
                                                <textarea class="form-control mb-3 w-100" id="reviewContent-${vendor.id}" rows="3" placeholder="Write a review..."></textarea>
                                                <div>
                                                <button class="btn text-light bg-pink-menu btn-sm" onclick="submitReview('${vendor.id}')">Submit Review</button>
                                            </div>
                                                </div>
                                                        </div>
                                   </div>
                                `;
                        $('#vendorProfileModalContent-' + vendorId).html(htmlContent);
                        loadReviews(vendorId);
                        $('#vendorProfileModal-' + vendorId).modal('show');
                    } else {
                        console.error(response.message);
                    }
                },
                error: function (error) {
                    $('#loader').addClass('d-none');
                    console.error(error);
                }
            });
        }

        function loadReviews(vendorId) {
            $.ajax({
                url: '/Customer/GetReviews',
                method: 'GET',
                data: { vendorId: vendorId },
                success: function (response) {
                    if (response.success) {
                        var reviewsHtml = '';
                        $.each(response.data, function (index, review) {
                            reviewsHtml += `<p><strong>${review.customerName}</strong>: ${review.content}</p>`;
                        });
                        $('#reviewList-' + vendorId).html(reviewsHtml);
                    } else {
                        console.error(response.message);
                    }
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }

        function submitReview(vendorId) {
            var content = $('#reviewContent-' + vendorId).val();
            if (!content) {
                alert("Please enter a review.");
                return;
            }
            $.ajax({
                url: '/Customer/AddReview',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ VendorId: vendorId, Content: content, CustomerId: '@User.FindFirstValue(ClaimTypes.NameIdentifier)', CustomerName: '@User.Identity.Name' }),
                success: function (response) {
                    if (response.success) {
                        loadReviews(vendorId);
                        $('#reviewContent-' + vendorId).val('');
                    } else {
                        console.error(response.message);
                    }
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }
        // Function to handle filter changes
        function filterComparisonTable() {
            var selectedVendors = [];
            var selectedFoodItems = [];

            // Get selected vendors
            $('.vendor-filter:checked').each(function () {
                var vendorId = $(this).val();
                if (vendorId !== 'all') {
                    selectedVendors.push(vendorId);
                }
            });

            // Get selected food items
            $('.food-filter:checked').each(function () {
                var foodItemName = $(this).val();
                if (foodItemName !== 'all') {
                    selectedFoodItems.push(foodItemName);
                }
            });

            // Show or hide rows based on selected food items
            $('.food-row').each(function () {
                var foodItemName = $(this).data('food-item');
                if (selectedFoodItems.length === 0 || selectedFoodItems.includes(foodItemName)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });

            // Show or hide columns based on selected vendors
            $('.vendor-column').each(function () {
                var vendorId = $(this).data('vendor-id');
                if (selectedVendors.length === 0 || selectedVendors.includes(vendorId)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });

            // Hide vendor header columns if the corresponding vendor columns are hidden
            $('th[data-vendor-id]').each(function () {
                var vendorId = $(this).data('vendor-id');
                if (selectedVendors.length === 0 || selectedVendors.includes(vendorId)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        }

        // Use event delegation to handle the change event for vendor and food item filter checkboxes
        $(document).on('change', '.vendor-filter, .food-filter', function () {
            filterComparisonTable();
        });

        // Trigger the initial filtering to ensure the table is correctly displayed on page load
        filterComparisonTable();
        $(document).on('submit', '.approve-quotation-form', function (e) {
            console.log("hi");
            $('#loader').removeClass('d-none');
            e.preventDefault();

            var form = $(this);
            var url = form.attr('action');
            var formData = form.serialize();

            // Disable the submit button to prevent multiple submissions
            form.find('button[type="submit"]').prop('disabled', true);

            $.post(url, formData, function (response) {
                $('#loader').addClass('d-none');

                // Enable the submit button again (optional, depending on your flow)
                form.find('button[type="submit"]').prop('disabled', false);

                // Assuming you're redirecting after success, the loader may remain visible until the page reloads
                if (response.success) {
                    window.location.href = '@Url.Action("ViewReceivedQuotations")';
                }
                else {
                    alert('Failed to approve the quotation. Please try again later.');
                }
            }).fail(function () {
                $('#loader').addClass('d-none');
                alert('An error occurred while processing your request.');
                form.find('button[type="submit"]').prop('disabled', false); // Re-enable the button on failure
            });
        });

        function rebindComparisonTableFilters() {
           $(document).on('change', '.vendor-filter, .food-filter', function () {
               filterComparisonTable();
           });
           filterComparisonTable(); // Ensure the table is filtered correctly
        }
    </script>


    }